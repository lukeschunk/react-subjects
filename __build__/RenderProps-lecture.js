webpackJsonp([46],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _react = __webpack_require__(70);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(103);\n\nvar _styles = __webpack_require__(380);\n\nvar styles = _interopRequireWildcard(_styles);\n\nvar _searchGitHubRepos = __webpack_require__(381);\n\nvar _searchGitHubRepos2 = _interopRequireDefault(_searchGitHubRepos);\n\nvar _ScrollBottomNotifier = __webpack_require__(386);\n\nvar _ScrollBottomNotifier2 = _interopRequireDefault(_ScrollBottomNotifier);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DefaultFetchURL = 'https://api.github.com/search/repositories?q=react&sort=stars';\n\n////////////////////////////////////////////////////////////////////////////////\n// Here's a fun app, check out ScrollBottomNotifier, making these kinds of tasks\n// declarative is fantastic and makes code reuse really straightforward.\n\nvar App = _react2.default.createClass({\n  displayName: 'App',\n  getInitialState: function getInitialState() {\n    return {\n      fetching: false,\n      repos: [],\n      links: {}\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.fetch(DefaultFetchURL);\n  },\n  fetchNextPage: function fetchNextPage() {\n    this.fetch(this.state.links.next);\n  },\n  fetch: function fetch(url) {\n    var _this = this;\n\n    this.setState({ fetching: true });\n\n    (0, _searchGitHubRepos2.default)(url, function (err, repos, links) {\n      _this.setState({\n        fetching: false,\n        repos: _this.state.repos.concat(repos),\n        links: links\n      });\n    });\n  },\n  render: function render() {\n    var canFetch = !this.state.fetching && this.state.links.next;\n\n    return _react2.default.createElement(\n      _ScrollBottomNotifier2.default,\n      {\n        style: styles.repos,\n        onScrollBottom: canFetch ? this.fetchNextPage : null\n      },\n      _react2.default.createElement(\n        'ul',\n        { style: styles.repoList },\n        this.state.repos.map(function (repo) {\n          return _react2.default.createElement(\n            'li',\n            { key: repo.id },\n            _react2.default.createElement(\n              'a',\n              { href: repo.html_url, style: styles.repo },\n              _react2.default.createElement(\n                'h3',\n                null,\n                repo.full_name\n              ),\n              _react2.default.createElement(\n                'p',\n                null,\n                repo.description\n              )\n            )\n          );\n        })\n      )\n    );\n  }\n});\n\n(0, _reactDom.render)(_react2.default.createElement(App, null), document.getElementById('app'));\n\n////////////////////////////////////////////////////////////////////////////////\n// Making something like Scrolling a component makes a lot of sense, but what\n// of all that github search stuff? Could we make that declarative?\n//\n// First we'll just create a new component and move a bunch of stuff from\n// <App> to <GitHubSearch>.\n\n//const GitHubSearch = React.createClass({\n//  propTypes: {\n//    url: PropTypes.string.isRequired\n//  },\n//\n//  getInitialState() {\n//    return {\n//      fetching: false,\n//      repos: [],\n//      links: {}\n//    }\n//  },\n//\n//  componentDidMount() {\n//    this.fetch()\n//  },\n//\n//  fetch() {\n//    this.setState({ fetching: true })\n//\n//    searchGitHubRepos(this.props.url, (err, repos, links) => {\n//      this.setState({\n//        fetching: false,\n//        repos: this.state.repos.concat(repos),\n//        links\n//      })\n//    })\n//  },\n//\n//  render() {\n//    return <pre>{JSON.stringify(this.state, null, 2)}</pre>\n//  }\n//})\n//\n//const App = React.createClass({\n//  render() {\n//    return (\n//      <GitHubSearch url={DefaultFetchURL}/>\n//    )\n//  }\n//})\n//\n//render(<App/>, document.getElementById('app'))\n\n////////////////////////////////////////////////////////////////////////////////\n// So now we've got the thing kinda working, but not rendering anything useful.\n// How do we get data from inside of <GitHubSearch>, back out to <App>?\n//\n// Well, how do we ever get data from inside a component to another? We send a\n// callback, turns out we can use that same technique for rendering too!\n\n//const GitHubSearch = React.createClass({\n//  propTypes: {\n//    url: PropTypes.string.isRequired,\n//    children: PropTypes.func.isRequired\n//  },\n//\n//  getInitialState() {\n//    return {\n//      fetching: false,\n//      repos: [],\n//      links: {}\n//    }\n//  },\n//\n//  componentDidMount() {\n//    this.fetch()\n//  },\n//\n//  componentDidUpdate(prevProps) {\n//    if (prevProps.url !== this.props.url)\n//      this.fetch()\n//  },\n//\n//  fetch() {\n//    this.setState({ fetching: true })\n//\n//    searchGitHubRepos(this.props.url, (err, repos, links) => {\n//      this.setState({\n//        fetching: false,\n//        repos: this.state.repos.concat(repos),\n//        links\n//      })\n//    })\n//  },\n//\n//  render() {\n//    return this.props.children(this.state)\n//  }\n//})\n//\n//const App = React.createClass({\n//  getInitialState() {\n//    return {\n//      fetchURL: DefaultFetchURL\n//    }\n//  },\n//\n//  fetchNextPage(search) {\n//    if (!search.fetching && search.links.next)\n//      this.setState({ fetchURL: search.links.next })\n//  },\n//\n//  render() {\n//    return (\n//      <div>\n//        <GitHubSearch url={this.state.fetchURL}>\n//          {search => (\n//            <ScrollBottomNotifier\n//              style={styles.repos}\n//              onScrollBottom={() => this.fetchNextPage(search)}\n//            >\n//              <ul style={styles.repoList}>\n//                {search.repos.map(repo => (\n//                  <li key={repo.id}>\n//                    <a href={repo.html_url} style={styles.repo}>\n//                      <h3>{repo.full_name}</h3>\n//                      <p>{repo.description}</p>\n//                    </a>\n//                  </li>\n//                ))}\n//              </ul>\n//            </ScrollBottomNotifier>\n//          )}\n//        </GitHubSearch>\n//      </div>\n//    )\n//  }\n//})\n//\n//render(<App/>, document.getElementById('app'))\n\n//////////////////\n// WEBPACK FOOTER\n// ./subjects/RenderProps/lecture.js\n// module id = 0\n// module chunks = 46\n//# sourceURL=webpack:///./subjects/RenderProps/lecture.js?");

/***/ },

/***/ 380:
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar repos = exports.repos = {\n  height: 400,\n  border: 'solid 1px'\n};\n\nvar repoList = exports.repoList = {\n  padding: 0,\n  margin: 0\n};\n\nvar repo = exports.repo = {\n  display: 'block',\n  textDecoration: 'none',\n  borderTop: '1px solid #aaa',\n  padding: 10\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./subjects/RenderProps/utils/styles.js\n// module id = 380\n// module chunks = 46\n//# sourceURL=webpack:///./subjects/RenderProps/utils/styles.js?");

/***/ },

/***/ 381:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jsonp = __webpack_require__(382);\n\nvar _jsonp2 = _interopRequireDefault(_jsonp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseLinks(meta) {\n  return meta.Link.reduce(function (links, link) {\n    links[link[1].rel] = link[0];\n    return links;\n  }, {});\n}\n\nfunction searchGithubRepos(url, callback) {\n  (0, _jsonp2.default)(url, function (err, res) {\n    callback(null, res.data.items, parseLinks(res.meta));\n  });\n}\n\nexports.default = searchGithubRepos;\n\n//////////////////\n// WEBPACK FOOTER\n// ./subjects/RenderProps/utils/searchGitHubRepos.js\n// module id = 381\n// module chunks = 46\n//# sourceURL=webpack:///./subjects/RenderProps/utils/searchGitHubRepos.js?");

/***/ },

/***/ 382:
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies\n */\n\nvar debug = __webpack_require__(383)('jsonp');\n\n/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - prefix {String} qs parameter (`__jp`)\n *  - name {String} qs parameter (`prefix` + incr)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n\n  // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n  var id = opts.name || (prefix + (count++));\n\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel(){\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function(data){\n    debug('jsonp got', data);\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  debug('jsonp req \"%s\"', url);\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n\n  return cancel;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonp/index.js\n// module id = 382\n// module chunks = 46\n//# sourceURL=webpack:///./~/jsonp/index.js?");

/***/ },

/***/ 383:
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(384);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Use chrome.storage.local if we are in an app\n */\n\nvar storage;\n\nif (typeof chrome !== 'undefined' && typeof chrome.storage !== 'undefined')\n  storage = chrome.storage.local;\nelse\n  storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      storage.removeItem('debug');\n    } else {\n      storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonp/~/debug/browser.js\n// module id = 383\n// module chunks = 46\n//# sourceURL=webpack:///./~/jsonp/~/debug/browser.js?");

/***/ },

/***/ 384:
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(385);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonp/~/debug/debug.js\n// module id = 384\n// module chunks = 46\n//# sourceURL=webpack:///./~/jsonp/~/debug/debug.js?");

/***/ },

/***/ 385:
/***/ function(module, exports) {

	eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonp/~/ms/index.js\n// module id = 385\n// module chunks = 46\n//# sourceURL=webpack:///./~/jsonp/~/ms/index.js?");

/***/ },

/***/ 386:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(70);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ScrollBottomNotifier = _react2.default.createClass({\n  displayName: 'ScrollBottomNotifier',\n\n  propTypes: {\n    buffer: _react.PropTypes.number.isRequired,\n    onScrollBottom: _react.PropTypes.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      buffer: 200\n    };\n  },\n  handleScroll: function handleScroll(event) {\n    var _event$target = event.target,\n        scrollTop = _event$target.scrollTop,\n        scrollHeight = _event$target.scrollHeight,\n        clientHeight = _event$target.clientHeight;\n\n    var hitBottom = scrollTop + clientHeight >= scrollHeight - this.props.buffer;\n\n    if (hitBottom && this.props.onScrollBottom) this.props.onScrollBottom();\n  },\n  render: function render() {\n    var style = _extends({}, this.props.style, { overflow: 'auto' });\n\n    return _react2.default.createElement('div', _extends({}, this.props, {\n      style: style,\n      onScroll: this.handleScroll\n    }));\n  }\n});\n\nexports.default = ScrollBottomNotifier;\n\n//////////////////\n// WEBPACK FOOTER\n// ./subjects/RenderProps/utils/ScrollBottomNotifier.js\n// module id = 386\n// module chunks = 46\n//# sourceURL=webpack:///./subjects/RenderProps/utils/ScrollBottomNotifier.js?");

/***/ }

});